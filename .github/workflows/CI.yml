name: CI
on:
  - push
  - pull_request
jobs:
  test:
    name: Julia ${{matrix.version}} - ${{matrix.os}} - ${{matrix.arch}} - ${{github.event_name}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        # arch: [x64, x86]
        # os: [ubuntu-latest, windows-latest, macOS-latest]
        # version: ["1.4", "1.5", "nightly"]
        include:
          - arch: "x64"
            os: "ubuntu-latest"
            version: "1.5"
          - arch: "x64"
            os: "windows-latest"
            version: "1.5"
          - arch: "x64"
            os: "macOS-latest"
            version: "1.5"
          # Temporarily disabled; see
          # <https://github.com/JuliaLang/julia/issues/37819>
          # - arch: "x86"
          #   os: "ubuntu-latest"
          #   # version: "1.5"
          #   version: "nightly"
          # Nightly cannot handle Manifest.toml written by 1.5
          # - arch: "x64"
          #   os: "ubuntu-latest"
          #   version: "nightly"
          - arch: "x64"
            os: "ubuntu-latest"
            version: "1.4"
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{matrix.version}}
          arch: ${{matrix.arch}}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{runner.os}}-test-${{env.cache-name}}-${{hashFiles('**/Project.toml')}}
          restore-keys: |
            ${{runner.os}}-test-${{env.cache-name}}-
            ${{runner.os}}-test-
            ${{runner.os}}-
      - uses: julia-actions/julia-buildpkg@v1
        env:
          PYTHON:
      - uses: julia-actions/julia-runtest@v1
        continue-on-error: ${{matrix.version == 'nightly'}}
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
  # docs:
  #   name: Documentation
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: julia-actions/setup-julia@v1
  #       with:
  #         version: '1'
  #     - run: |
  #         julia --project=docs -e '
  #           using Pkg
  #           Pkg.develop(PackageSpec(path=pwd()))
  #           Pkg.instantiate()'
  #       env:
  #         PYTHON:
  #     - run: |
  #         julia --project=docs -e '
  #           using Documenter: doctest
  #           using Fun1d
  #           doctest(Fun1d)'
  #       env:
  #         PYTHON:
  #     - run: julia --project=docs docs/make.jl
  #       env:
  #         GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
